<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="abb " enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.17. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;88&quot;, &quot;Google Chrome&quot;;v=&quot;88&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.104 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">abbchampagne-app-qa.azurewebsites.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">firebasestorage.googleapis.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">www.googleapis.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">firestore.googleapis.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://abbchampagne-app-qa.azurewebsites.net/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://abbchampagne-app-qa.azurewebsites.net/assets/i18n/en.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/i18n/en.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/agreement%2Fen%2FABB%20End%20User%20License%20Agreement%20NexusPro-NaveoPro.pdf" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/agreement%2Fen%2FABB%20End%20User%20License%20Agreement%20NexusPro-NaveoPro.pdf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/agreement%2Fdefault%2FABB%20End%20User%20License%20Agreement%20NexusPro-NaveoPro.pdf" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/agreement%2Fdefault%2FABB%20End%20User%20License%20Agreement%20NexusPro-NaveoPro.pdf</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCcQj1qx7Y2H6yVOCtOEc3y1JWVGeYjaqs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;email&quot;:&quot;himanshu17@sidekickinteractive.com&quot;,&quot;password&quot;:&quot;Qwerty1234&quot;,&quot;returnSecureToken&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyCcQj1qx7Y2H6yVOCtOEc3y1JWVGeYjaqs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Client-Version" elementType="Header">
                  <stringProp name="Header.name">X-Client-Version</stringProp>
                  <stringProp name="Header.value">Chrome/JsCore/8.0.1/FirebaseCore-web</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.googleapis.com/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyCcQj1qx7Y2H6yVOCtOEc3y1JWVGeYjaqs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;idToken&quot;:&quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyCcQj1qx7Y2H6yVOCtOEc3y1JWVGeYjaqs</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Client-Version" elementType="Header">
                  <stringProp name="Header.name">X-Client-Version</stringProp>
                  <stringProp name="Header.value">Chrome/JsCore/8.0.1/FirebaseCore-web</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;RID=33426&amp;CVER=22&amp;X-HTTP-Session-Id=gsessionid&amp;%24httpHeaders=X-Goog-Api-Client%3Agl-js%2F%20fire%2F8.0.2%0D%0AContent-Type%3Atext%2Fplain%0D%0AAuthorization%3ABearer%20eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg%0D%0A&amp;zx=qz2bjb5z67mg&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="$httpHeaders" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$httpHeaders</stringProp>
                  <stringProp name="Argument.value">X-Goog-Api-Client:gl-js/ fire/8.0.2&#xd;
Content-Type:text/plain&#xd;
Authorization:Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Session-Id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">X-HTTP-Session-Id</stringProp>
                  <stringProp name="Argument.value">gsessionid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33426</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">qz2bjb5z67mg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CVER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CVER</stringProp>
                  <stringProp name="Argument.value">22</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;organizations&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents/users/vrTB75gotyOGoCPo2yGKyVtrfg83&quot;},&quot;targetId&quot;:2}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;VER=8&amp;RID=rpc&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;CI=0&amp;AID=0&amp;TYPE=xmlhttp&amp;zx=rdsm2bauifqd&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="CI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">CI</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">rpc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="TYPE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">TYPE</stringProp>
                  <stringProp name="Argument.value">xmlhttp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">rdsm2bauifqd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33427&amp;AID=4&amp;zx=2ftqf5g3x22m&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33427</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">2ftqf5g3x22m</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;documents&quot;:{&quot;documents&quot;:[&quot;projects/champagne-test/databases/(default)/documents/organizations/5CD58C12-F07E-4BD1-9C80-AB0C18FFA656/staff/vrTB75gotyOGoCPo2yGKyVtrfg83&quot;]},&quot;targetId&quot;:4}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33428&amp;AID=8&amp;zx=4okav215npgl&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33428</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">4okav215npgl</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;documents&quot;:{&quot;documents&quot;:[&quot;projects/champagne-test/databases/(default)/documents/organizations/5CD58C12-F07E-4BD1-9C80-AB0C18FFA656&quot;]},&quot;targetId&quot;:6}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FFloorPlans%2F5CD58C12-F07E-4BD1-9C80-AB0C18FFA656%2FBEA4810F-0B85-4544-AA1A-CDBC77395279_FloorPlan" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FFloorPlans%2F5CD58C12-F07E-4BD1-9C80-AB0C18FFA656%2FBEA4810F-0B85-4544-AA1A-CDBC77395279_FloorPlan</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33429&amp;AID=12&amp;zx=g54d1up360sd&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33429</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">g54d1up360sd</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;staff&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents/organizations/5CD58C12-F07E-4BD1-9C80-AB0C18FFA656&quot;},&quot;targetId&quot;:8}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33430&amp;AID=12&amp;zx=k3r1ho97f0tv&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33430</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">k3r1ho97f0tv</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;abbNetworks&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents/organizations/5CD58C12-F07E-4BD1-9C80-AB0C18FFA656&quot;},&quot;targetId&quot;:10}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33431&amp;AID=12&amp;zx=ns3u059fo9p6&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33431</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">ns3u059fo9p6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;nodes&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents/organizations/5CD58C12-F07E-4BD1-9C80-AB0C18FFA656&quot;},&quot;targetId&quot;:12}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33432&amp;AID=12&amp;zx=7caszzytsexs&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33432</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">7caszzytsexs</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;defaultSchedulerActions&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:14}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33433&amp;AID=12&amp;zx=1de4wj34fbvu&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33433</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">1de4wj34fbvu</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;defaultTests&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:16}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33434&amp;AID=12&amp;zx=52h6xgqfygmj&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33434</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">52h6xgqfygmj</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;modelPartNumbers&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:18}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33435&amp;AID=12&amp;zx=v6ht1e1l2v8t&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33435</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">v6ht1e1l2v8t</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;healthFaults&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:20}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33436&amp;AID=12&amp;zx=1vga8zqp65pz&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33436</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">1vga8zqp65pz</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;series&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:22}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33437&amp;AID=12&amp;zx=ac89xcpx73h9&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33437</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">ac89xcpx73h9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;brands&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:24}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33438&amp;AID=12&amp;zx=azpo3omerq5t&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33438</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">azpo3omerq5t</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;documents&quot;:{&quot;documents&quot;:[&quot;projects/champagne-test/databases/(default)/documents/healthFaults/default&quot;]},&quot;targetId&quot;:26}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33439&amp;AID=14&amp;zx=phzwk622yvn0&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33439</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">phzwk622yvn0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;query&quot;:{&quot;structuredQuery&quot;:{&quot;from&quot;:[{&quot;collectionId&quot;:&quot;repairTypes&quot;}],&quot;orderBy&quot;:[{&quot;field&quot;:{&quot;fieldPath&quot;:&quot;__name__&quot;},&quot;direction&quot;:&quot;ASCENDING&quot;}]},&quot;parent&quot;:&quot;projects/champagne-test/databases/(default)/documents&quot;},&quot;targetId&quot;:28}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">13</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbb124b59-6a92-4e16-ac5c-82f491eb1acd%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbb124b59-6a92-4e16-ac5c-82f491eb1acd%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbb124b59-6a92-4e16-ac5c-82f491eb1acd%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbb124b59-6a92-4e16-ac5c-82f491eb1acd%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbb124b59-6a92-4e16-ac5c-82f491eb1acd%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbb124b59-6a92-4e16-ac5c-82f491eb1acd%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FA7E359E5-D9A2-4D0E-ABD7-1B43166E689A%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FDF80B62E-0EA7-4E2A-9F16-C53FB96C82FA%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FDF80B62E-0EA7-4E2A-9F16-C53FB96C82FA%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FDF80B62E-0EA7-4E2A-9F16-C53FB96C82FA%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FDF80B62E-0EA7-4E2A-9F16-C53FB96C82FA%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2FDF80B62E-0EA7-4E2A-9F16-C53FB96C82FA%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2FDF80B62E-0EA7-4E2A-9F16-C53FB96C82FA%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2Fbe52c01d-f494-4b39-9231-0dfe10ee998e%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F5a676259-f61e-4aec-a708-d793cea13589%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F62cdc5ca-4d0c-41cd-a535-064e4d3fd8b1%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F539d8236-ef4b-44bc-973c-57d787abea53%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F539d8236-ef4b-44bc-973c-57d787abea53%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F539d8236-ef4b-44bc-973c-57d787abea53%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F539d8236-ef4b-44bc-973c-57d787abea53%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F539d8236-ef4b-44bc-973c-57d787abea53%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F539d8236-ef4b-44bc-973c-57d787abea53%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F745C58F3-DB07-4D60-A814-0FAF998CE441%2Fcard.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F745C58F3-DB07-4D60-A814-0FAF998CE441%2Fcard.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F745C58F3-DB07-4D60-A814-0FAF998CE441%2Ffull.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F745C58F3-DB07-4D60-A814-0FAF998CE441%2Ffull.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firebasestorage.googleapis.com/v0/b/champagne-test.appspot.com/o/images%2FDevices%2F745C58F3-DB07-4D60-A814-0FAF998CE441%2Fthumb.png" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">v0/b/champagne-test.appspot.com/o/images%2FDevices%2F745C58F3-DB07-4D60-A814-0FAF998CE441%2Fthumb.png</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Firebase eyJhbGciOiJSUzI1NiIsImtpZCI6IjljZTVlNmY1MzBiNDkwMTFiYjg0YzhmYWExZWM1NGM1MTc1N2I2NTgiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiYW5kcm9pZCBvbmx5IiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL2NoYW1wYWduZS10ZXN0IiwiYXVkIjoiY2hhbXBhZ25lLXRlc3QiLCJhdXRoX3RpbWUiOjE2MTE5NTA5ODUsInVzZXJfaWQiOiJ2clRCNzVnb3R5T0dvQ1BvMnlHS3lWdHJmZzgzIiwic3ViIjoidnJUQjc1Z290eU9Hb0NQbzJ5R0t5VnRyZmc4MyIsImlhdCI6MTYxMTk1MDk4NSwiZXhwIjoxNjExOTU0NTg1LCJlbWFpbCI6ImhpbWFuc2h1MTdAc2lkZWtpY2tpbnRlcmFjdGl2ZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmlyZWJhc2UiOnsiaWRlbnRpdGllcyI6eyJlbWFpbCI6WyJoaW1hbnNodTE3QHNpZGVraWNraW50ZXJhY3RpdmUuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.jSLl2jhO5cEcfDQd7LVElBjhzA0iq8jsmDHYoWqnzENTvPB8ojNdfx4Z6lXXVmzgaL9mOzWfPxVNslwDZBWzl2VWQsSHxYpGDB7c1jFvd94O_wDQf9KhBnzkPifMNOq3Y4LyBmmjQCjO1dacxDBbhFbGjAU1dlPHNcdY3sg5_QaKSUWbgzHW-vaAVhr2tQSlZxhVxNF-BzgRZIIYPX_XLG7DdywBB_zJOolVHysjZ_O0NKaVf_tUlb8AWOHfVd0YyuiYpY02tp4cPeC8k4EWVd-rD5SMfkJ0aoNsxHBGJZB1MaDc8M_tILMtkKC3_bTxXNRw0GbD99lD-DaLngS6tg</stringProp>
                </elementProp>
                <elementProp name="X-Firebase-Storage-Version" elementType="Header">
                  <stringProp name="Header.name">X-Firebase-Storage-Version</stringProp>
                  <stringProp name="Header.value">webjs/8.0.1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://abbchampagne-app-qa.azurewebsites.net/assets/images/site-locations/complex.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/images/site-locations/complex.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://abbchampagne-app-qa.azurewebsites.net/assets/images/site-locations/building.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/images/site-locations/building.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://abbchampagne-app-qa.azurewebsites.net/assets/images/site-locations/property.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/images/site-locations/property.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://abbchampagne-app-qa.azurewebsites.net/assets/images/site-locations/floor.svg" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">assets/images/site-locations/floor.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://firestore.googleapis.com/google.firestore.v1.Firestore/Listen/channel?database=projects%2Fchampagne-test%2Fdatabases%2F(default)&amp;VER=8&amp;gsessionid=FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo&amp;SID=_1SnbbL9OSYy3SOtkx7wxg&amp;RID=33440&amp;AID=199&amp;zx=9dkkmllq0vzr&amp;t=1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="database" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">database</stringProp>
                  <stringProp name="Argument.value">projects/champagne-test/databases/(default)</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="VER" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">VER</stringProp>
                  <stringProp name="Argument.value">8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gsessionid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gsessionid</stringProp>
                  <stringProp name="Argument.value">FXDgdYgy29gzmGoSeV1k7EXR0MqYQbMMaOiRVtdgcRo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="RID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RID</stringProp>
                  <stringProp name="Argument.value">33440</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">AID</stringProp>
                  <stringProp name="Argument.value">199</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zx" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">zx</stringProp>
                  <stringProp name="Argument.value">9dkkmllq0vzr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="SID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SID</stringProp>
                  <stringProp name="Argument.value">_1SnbbL9OSYy3SOtkx7wxg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="count" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">count</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="req0___data__" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">req0___data__</stringProp>
                  <stringProp name="Argument.value">{&quot;database&quot;:&quot;projects/champagne-test/databases/(default)&quot;,&quot;addTarget&quot;:{&quot;documents&quot;:{&quot;documents&quot;:[&quot;projects/champagne-test/databases/(default)/documents/users/vrTB75gotyOGoCPo2yGKyVtrfg83/organizations/5CD58C12-F07E-4BD1-9C80-AB0C18FFA656&quot;]},&quot;targetId&quot;:30}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ofs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ofs</stringProp>
                  <stringProp name="Argument.value">14</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">google.firestore.v1.Firestore/Listen/channel</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CIu2yQEIorbJAQjBtskBCKmdygEIo83KAQjc1coBCJOaywEIqZ3LAQjencsB</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
